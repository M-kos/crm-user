// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * User Service API
 *
 * API of User microservice
 *
 * API version: 0.0.1
 */

package userApi

import (
	"context"
	"net/http"
	"errors"
)

// AuthAPIService is a service that implements the logic for the AuthAPIServicer
// This service should implement the business logic for every endpoint for the AuthAPI API.
// Include any external packages or services that will be required by this service.
type AuthAPIService struct {
}

// NewAuthAPIService creates a default api service
func NewAuthAPIService() *AuthAPIService {
	return &AuthAPIService{}
}

// AuthLoginUser - Login user into the system
func (s *AuthAPIService) AuthLoginUser(ctx context.Context, loginUserRequest LoginUserRequest) (ImplResponse, error) {
	// TODO - update AuthLoginUser with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AuthLoginUser method not implemented")
}

// AuthRefreshUser - Refresh user token
func (s *AuthAPIService) AuthRefreshUser(ctx context.Context) (ImplResponse, error) {
	// TODO - update AuthRefreshUser with the required logic for this service method.
	// Add api_auth_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AuthRefreshUser method not implemented")
}
